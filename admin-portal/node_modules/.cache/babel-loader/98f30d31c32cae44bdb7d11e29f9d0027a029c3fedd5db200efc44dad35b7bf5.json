{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectPackage\\\\claude_code_project\\\\RedCellProject\\\\wx_mini_program\\\\admin-portal\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [adminInfo, setAdminInfo] = useState(null);\n\n  // 检查本地存储的token\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('admin_token');\n      if (token) {\n        try {\n          // 验证token有效性\n          const response = await api.get('/admin/profile');\n          if (response.data.success) {\n            setIsAuthenticated(true);\n            setAdminInfo(response.data.data);\n          } else {\n            localStorage.removeItem('admin_token');\n          }\n        } catch (error) {\n          console.error('Token验证失败:', error);\n          localStorage.removeItem('admin_token');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async password => {\n    try {\n      console.log('🚀 开始登录请求...', {\n        password\n      });\n      const response = await api.post('/admin/login', {\n        password\n      });\n      console.log('📄 登录响应:', response.data);\n\n      // 检查响应数据结构\n      if (response.data && (response.data.success || response.data.code === 200)) {\n        const responseData = response.data.data || response.data;\n        const {\n          token,\n          permissions,\n          expireTime\n        } = responseData;\n        if (token) {\n          // 保存token和用户信息\n          localStorage.setItem('admin_token', token);\n          localStorage.setItem('admin_permissions', JSON.stringify(permissions || []));\n          localStorage.setItem('admin_expire_time', expireTime || '');\n          setIsAuthenticated(true);\n          setAdminInfo({\n            username: 'admin',\n            permissions: permissions || [],\n            expireTime\n          });\n          message.success('登录成功');\n          return {\n            success: true\n          };\n        } else {\n          message.error('服务器响应数据异常');\n          return {\n            success: false,\n            message: '服务器响应数据异常'\n          };\n        }\n      } else {\n        var _response$data;\n        const errorMsg = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) || '登录失败';\n        message.error(errorMsg);\n        return {\n          success: false,\n          message: errorMsg\n        };\n      }\n    } catch (error) {\n      console.error('🚨 登录错误:', error);\n      let errorMessage = '登录失败，请检查网络连接';\n      if (error.response) {\n        var _error$response$data;\n        // 服务器响应了错误状态码\n        console.error('服务器错误:', error.response.status, error.response.data);\n        errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || `服务器错误 (${error.response.status})`;\n      } else if (error.request) {\n        // 请求已发送但没有响应\n        console.error('网络错误:', error.request);\n        errorMessage = '网络连接失败，请检查后端服务器是否启动';\n      } else {\n        // 请求设置时发生错误\n        console.error('请求配置错误:', error.message);\n        errorMessage = '请求配置错误';\n      }\n      message.error(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.post('/admin/logout');\n    } catch (error) {\n      console.error('登出请求失败:', error);\n    } finally {\n      // 清除本地存储\n      localStorage.removeItem('admin_token');\n      localStorage.removeItem('admin_permissions');\n      localStorage.removeItem('admin_expire_time');\n      setIsAuthenticated(false);\n      setAdminInfo(null);\n      message.success('已退出登录');\n    }\n  };\n  const hasPermission = permission => {\n    var _adminInfo$permission;\n    return (adminInfo === null || adminInfo === void 0 ? void 0 : (_adminInfo$permission = adminInfo.permissions) === null || _adminInfo$permission === void 0 ? void 0 : _adminInfo$permission.includes(permission)) || false;\n  };\n  const value = {\n    isAuthenticated,\n    loading,\n    adminInfo,\n    login,\n    logout,\n    hasPermission\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"eFI0WGbRUKbpmZtr+3kghL+0/N4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","message","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","loading","setLoading","adminInfo","setAdminInfo","checkAuth","token","localStorage","getItem","response","get","data","success","removeItem","error","console","login","password","log","post","code","responseData","permissions","expireTime","setItem","JSON","stringify","username","_response$data","errorMsg","errorMessage","_error$response$data","status","request","logout","hasPermission","permission","_adminInfo$permission","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ProjectPackage/claude_code_project/RedCellProject/wx_mini_program/admin-portal/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport api from '../utils/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [adminInfo, setAdminInfo] = useState(null);\n\n  // 检查本地存储的token\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('admin_token');\n      if (token) {\n        try {\n          // 验证token有效性\n          const response = await api.get('/admin/profile');\n          if (response.data.success) {\n            setIsAuthenticated(true);\n            setAdminInfo(response.data.data);\n          } else {\n            localStorage.removeItem('admin_token');\n          }\n        } catch (error) {\n          console.error('Token验证失败:', error);\n          localStorage.removeItem('admin_token');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (password) => {\n    try {\n      console.log('🚀 开始登录请求...', { password });\n      const response = await api.post('/admin/login', { password });\n      \n      console.log('📄 登录响应:', response.data);\n      \n      // 检查响应数据结构\n      if (response.data && (response.data.success || response.data.code === 200)) {\n        const responseData = response.data.data || response.data;\n        const { token, permissions, expireTime } = responseData;\n        \n        if (token) {\n          // 保存token和用户信息\n          localStorage.setItem('admin_token', token);\n          localStorage.setItem('admin_permissions', JSON.stringify(permissions || []));\n          localStorage.setItem('admin_expire_time', expireTime || '');\n          \n          setIsAuthenticated(true);\n          setAdminInfo({\n            username: 'admin',\n            permissions: permissions || [],\n            expireTime\n          });\n          \n          message.success('登录成功');\n          return { success: true };\n        } else {\n          message.error('服务器响应数据异常');\n          return { success: false, message: '服务器响应数据异常' };\n        }\n      } else {\n        const errorMsg = response.data?.message || '登录失败';\n        message.error(errorMsg);\n        return { success: false, message: errorMsg };\n      }\n    } catch (error) {\n      console.error('🚨 登录错误:', error);\n      \n      let errorMessage = '登录失败，请检查网络连接';\n      \n      if (error.response) {\n        // 服务器响应了错误状态码\n        console.error('服务器错误:', error.response.status, error.response.data);\n        errorMessage = error.response.data?.message || `服务器错误 (${error.response.status})`;\n      } else if (error.request) {\n        // 请求已发送但没有响应\n        console.error('网络错误:', error.request);\n        errorMessage = '网络连接失败，请检查后端服务器是否启动';\n      } else {\n        // 请求设置时发生错误\n        console.error('请求配置错误:', error.message);\n        errorMessage = '请求配置错误';\n      }\n      \n      message.error(errorMessage);\n      return { success: false, message: errorMessage };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await api.post('/admin/logout');\n    } catch (error) {\n      console.error('登出请求失败:', error);\n    } finally {\n      // 清除本地存储\n      localStorage.removeItem('admin_token');\n      localStorage.removeItem('admin_permissions');\n      localStorage.removeItem('admin_expire_time');\n      \n      setIsAuthenticated(false);\n      setAdminInfo(null);\n      message.success('已退出登录');\n    }\n  };\n\n  const hasPermission = (permission) => {\n    return adminInfo?.permissions?.includes(permission) || false;\n  };\n\n  const value = {\n    isAuthenticated,\n    loading,\n    adminInfo,\n    login,\n    logout,\n    hasPermission\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}