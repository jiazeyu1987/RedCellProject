config:
  target: 'http://localhost:3000'
  phases:
    - duration: 60
      arrivalRate: 1
      name: "预热阶段"
    - duration: 300
      arrivalRate: 5
      name: "正常负载"
    - duration: 120
      arrivalRate: 10
      name: "轻度压力"
  processor: '../src/testProcessor.js'
  variables:
    apiPrefix: 'v1'
  
scenarios:
  - name: "用户注册流程测试"
    weight: 40
    flow:
      - function: "generateUserData"
      - post:
          url: "/{{ apiPrefix }}/auth/register"
          json:
            openId: "{{ openId }}"
            nickname: "{{ nickname }}"
            avatar: "{{ avatar }}"
            realName: "{{ realName }}"
            phone: "{{ phone }}"
            age: "{{ age }}"
            gender: "{{ gender }}"
            emergencyContact: "{{ emergencyContact }}"
            healthCondition: "{{ healthCondition }}"
          expect:
            - statusCode: [200, 201]
      - think: 2

  - name: "管理员登录测试"
    weight: 20
    flow:
      - post:
          url: "/{{ apiPrefix }}/admin/login"
          json:
            password: "admin123"
          capture:
            - json: "$.data.token"
              as: "adminToken"
          expect:
            - statusCode: 200
      - think: 1

  - name: "用户池管理测试"
    weight: 25
    flow:
      - post:
          url: "/{{ apiPrefix }}/admin/login"
          json:
            password: "admin123"
          capture:
            - json: "$.data.token"
              as: "adminToken"
      - get:
          url: "/{{ apiPrefix }}/admin/user-pool"
          headers:
            Authorization: "Bearer {{ adminToken }}"
          qs:
            page: 1
            pageSize: 20
          expect:
            - statusCode: 200
      - think: 1

  - name: "智能分配测试"
    weight: 15
    flow:
      - post:
          url: "/{{ apiPrefix }}/admin/login"
          json:
            password: "admin123"
          capture:
            - json: "$.data.token"
              as: "adminToken"
      - function: "generateAssignmentData"
      - post:
          url: "/{{ apiPrefix }}/admin/auto-assign"
          headers:
            Authorization: "Bearer {{ adminToken }}"
          json:
            userIds: "{{ userIds }}"
            algorithm: "{{ algorithm }}"
            maxDistance: "{{ maxDistance }}"
            preferences:
              considerSpecialty: true
              considerSchedule: true
              balanceLoad: true
          expect:
            - statusCode: [200, 400]
      - think: 3